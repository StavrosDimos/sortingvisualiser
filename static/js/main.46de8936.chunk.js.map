{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","components/sorterTempComponent.jsx","index.js"],"names":["App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Sorter","state","screenHeight","screenWidth","width","height","values","valueStates","bubbleIsActive","mergeIsActive","quickIsActive","sortInterval","bubbleInner","bubbleOuter","mergeArrays","quickArrays","speed","Fragment","Navbar","bg","variant","Brand","Button","className","onClick","this","genNewArray","renderButtons","sortOnClick","renderColumns","bind","mergeSortOnClick","quickSortOnClick","bubbleSortOnClick","updateWindowDimensions","bubbleStep","mergeStep","quickStep","setState","setTimeout","window","addEventListener","removeEventListener","innerHeight","columnHeight","innerWidth","clearInterval","Array","Math","floor","states","i","length","random","columns","vals","push","style","display","backgroundColor","lines","ButtonGroup","aria-label","BsortInterval","setInterval","MsortInterval","MtempArray","QsortInterval","Qvalues","QtempArray","inner","outer","temp","arrays","newArrays","newValues","tempArray","g","sort","a","b","console","log","newQuickArrays","doneStep","lockedIndex","completeIndexes","pivot","split","splitOnPivot","pivotIndex","lowerHalf","upperHalf","pivotVal","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.46de8936.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.2d27ead7.svg\";","import logo from './logo.svg';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <p>\r\n          Edit <code>src/App.js</code> and save to reload.\r\n        </p>\r\n        <a\r\n          className=\"App-link\"\r\n          href=\"https://reactjs.org\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Learn React\r\n        </a>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React, { Component } from 'react';\r\nimport Button from 'react-bootstrap/Button'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport { Navbar } from 'react-bootstrap';\r\nimport {ButtonGroup} from 'react-bootstrap';\r\n\r\nclass Sorter extends Component {\r\n    state = {\r\n        screenHeight: null,\r\n        screenWidth: null,\r\n        width: 5,\r\n        height: 849,\r\n        values: [],\r\n        valueStates: [],\r\n        bubbleIsActive: null,\r\n        mergeIsActive: null,\r\n        quickIsActive: null,\r\n        sortInterval: null,\r\n        bubbleInner: null,\r\n        bubbleOuter: null,\r\n        mergeArrays: [],\r\n        quickArrays: [],\r\n        speed: 15\r\n    };\r\n\r\n    render(){\r\n        return (\r\n            <React.Fragment>\r\n                <Navbar bg=\"dark\" variant=\"dark\">\r\n                    <Navbar.Brand>\r\n                        Sorting Visualiser (WIP)\r\n                    </Navbar.Brand>\r\n                    <Button className=\"ml-1\" variant=\"primary\" onClick={this.genNewArray}>\r\n                        Generate Array\r\n                    </Button>\r\n                    {this.renderButtons()}\r\n                    <Button className=\"ml-3\" variant=\"primary\" onClick={this.sortOnClick}>\r\n                        Sort\r\n                    </Button>\r\n                </Navbar>\r\n                {this.renderColumns()} \r\n                <Navbar bg=\"dark\" variant=\"dark\" className=\"mt-0\">\r\n\r\n                </Navbar>\r\n            </React.Fragment>\r\n            );\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.genNewArray=this.genNewArray.bind(this)\r\n        this.mergeSortOnClick=this.mergeSortOnClick.bind(this)\r\n        this.quickSortOnClick=this.quickSortOnClick.bind(this)\r\n        this.bubbleSortOnClick=this.bubbleSortOnClick.bind(this)\r\n        this.updateWindowDimensions=this.updateWindowDimensions.bind(this)\r\n        this.bubbleStep=this.bubbleStep.bind(this)\r\n        this.mergeStep=this.mergeStep.bind(this)\r\n        this.sortOnClick=this.sortOnClick.bind(this)\r\n        this.quickStep=this.quickStep.bind(this)\r\n        this.setState({mergeIsActive: false, bubbleIsActive: true, quickIsActive: false})\r\n        this.updateWindowDimensions()\r\n        setTimeout(this.genNewArray, 10)\r\n        this.genNewArray()\r\n        window.addEventListener('resize', this.updateWindowDimensions)\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        window.removeEventListener('resize', this.updateWindowDimensions)\r\n    }\r\n\r\n    updateWindowDimensions(){\r\n        var height = window.innerHeight\r\n        var columnHeight = height - 80\r\n        this.setState({screenWidth: window.innerWidth, screenHeight: height, height: columnHeight})\r\n    }\r\n\r\n    genNewArray(){\r\n        clearInterval(this.state.sortInterval)\r\n        var screenWidth = this.state.screenWidth\r\n        screenWidth = screenWidth-17\r\n        if (screenWidth <= 0){\r\n            screenWidth = 1\r\n        }\r\n        var values = new Array(Math.floor(screenWidth/this.state.width))\r\n        var states = new Array(Math.floor(screenWidth/this.state.width))\r\n        for (var i=0; i<values.length; i++){\r\n            values[i]=Math.random()*(this.state.height-5)\r\n            states[i]=1\r\n        }\r\n        this.setState({values: values, valueStates: states})\r\n    }\r\n\r\n    renderColumns(){\r\n        if (this.state.screenWidth != null){\r\n            var columns = []\r\n            var vals = this.state.values\r\n            var states = this.state.valueStates\r\n            var height = this.state.height\r\n            for (var i=0; i<(this.state.screenWidth-17)/this.state.width; i++){\r\n                columns.push(<div style={{display: \"inline-block\", width: 1, height: height}}></div>)\r\n                if (states[i]===1){\r\n                    columns.push(<div style={{display: \"inline-block\", width: (this.state.width-1), height: vals[i], backgroundColor: 'skyblue'}}></div>)\r\n                }\r\n                if (states[i]===2){\r\n                    columns.push(<div style={{display: \"inline-block\", width: (this.state.width-1), height: vals[i], backgroundColor: 'chocolate'}}></div>)\r\n                }\r\n                if (states[i]===3){\r\n                    columns.push(<div style={{display: \"inline-block\", width: (this.state.width-1), height: vals[i], backgroundColor: 'forestgreen'}}></div>)\r\n                }\r\n            }\r\n\r\n            return columns\r\n        }\r\n    }\r\n\r\n    renderButtons(){\r\n        if (this.state.bubbleIsActive != null){\r\n            var bubbleIsActive = this.state.bubbleIsActive\r\n            var mergeIsActive = this.state.mergeIsActive\r\n            var quickIsActive = this.state.quickIsActive\r\n            var lines = []\r\n            if (bubbleIsActive){\r\n                lines.push(<Button variant=\"primary\" onClick={this.bubbleSortOnClick}>BubbleSort</Button>)\r\n            } else {\r\n                lines.push(<Button variant=\"secondary\" onClick={this.bubbleSortOnClick}>BubbleSort</Button>)\r\n            }\r\n            if (mergeIsActive){\r\n                lines.push(<Button className=\"ml-1\" variant=\"primary\" onClick={this.mergeSortOnClick}>Merge Sort</Button>)\r\n            } else {\r\n                lines.push(<Button className=\"ml-1\" variant=\"secondary\" onClick={this.mergeSortOnClick}>Merge Sort</Button>)\r\n            }\r\n            if (quickIsActive){\r\n                lines.push(<Button className=\"ml-1\" variant=\"primary\" onClick={this.quickSortOnClick}>Quick Sort</Button>)\r\n            } else {\r\n                lines.push(<Button className=\"ml-1\" variant=\"secondary\" onClick={this.quickSortOnClick}>Quick Sort</Button>)\r\n            }\r\n            return (\r\n                <ButtonGroup className=\"ml-3\" aria-label=\"Sorting Options\">\r\n                    {lines}\r\n                </ButtonGroup>\r\n            )\r\n        }\r\n    }\r\n\r\n    bubbleSortOnClick(){\r\n        this.setState({mergeIsActive: false, bubbleIsActive: true, quickIsActive: false})\r\n        clearInterval(this.state.sortInterval)\r\n        var states = this.state.valueStates\r\n            for(var i = 0; i < states.length; i++){\r\n                states[i]=1\r\n            }\r\n        this.setState({valueStates: states})\r\n    }\r\n\r\n    mergeSortOnClick(){\r\n        this.setState({mergeIsActive: true, bubbleIsActive: false, quickIsActive: false})\r\n        clearInterval(this.state.sortInterval)\r\n        var states = this.state.valueStates\r\n            for(var i = 0; i < states.length; i++){\r\n                states[i]=1\r\n            }\r\n        this.setState({valueStates: states})\r\n    }\r\n\r\n    quickSortOnClick(){\r\n        this.setState({mergeIsActive: false, bubbleIsActive: false, quickIsActive: true})\r\n        clearInterval(this.state.sortInterval)\r\n        var states = this.state.valueStates\r\n            for(var i = 0; i < states.length; i++){\r\n                states[i]=1\r\n            }\r\n        this.setState({valueStates: states})\r\n    }\r\n\r\n    sortOnClick(){\r\n        clearInterval(this.state.sortInterval)\r\n        if (this.state.bubbleIsActive){\r\n            var BsortInterval = setInterval(this.bubbleStep, 1)\r\n            this.setState({sortInterval: BsortInterval, bubbleInner: 0, bubbleOuter: 0})\r\n        }\r\n        if (this.state.mergeIsActive){\r\n            var MsortInterval = setInterval(this.mergeStep, 500)\r\n            var values = this.state.values\r\n            var mergeArrays = []\r\n            for (var i = 0; i < values.length; i++){\r\n                var MtempArray = []\r\n                MtempArray.push(values[i])\r\n                mergeArrays.push(MtempArray)\r\n            }\r\n            this.setState({sortInterval: MsortInterval, mergeArrays: mergeArrays})\r\n        }\r\n        if (this.state.quickIsActive){\r\n            var QsortInterval = setInterval(this.quickStep, 100)\r\n            var Qvalues = this.state.values\r\n            var QtempArray = []\r\n            QtempArray.push(Qvalues)\r\n            this.setState({sortInterval: QsortInterval, quickArrays: QtempArray})\r\n        }\r\n    }\r\n    \r\n    bubbleStep(){\r\n        var inner = this.state.bubbleInner\r\n        var outer = this.state.bubbleOuter\r\n        var speed = this.state.speed\r\n        var states = this.state.valueStates\r\n        var values = this.state.values\r\n\r\n        for (var i = 0; i < speed; i++){\r\n            if (inner>this.state.values.length - 1-outer){\r\n                states[inner-1]=3\r\n                states[inner] = 3\r\n                inner = 0\r\n                outer = outer+1\r\n            }\r\n            if (outer >this.state.values.length){\r\n                clearInterval(this.state.sortInterval)\r\n            }\r\n            \r\n            if (states[inner]===1){\r\n                states[inner]=2\r\n                states[inner+1]=2\r\n            } else {\r\n                states[inner]=1\r\n                states[inner+1]=1\r\n            if (values[inner]>values[inner+1]){\r\n                var temp = values[inner]\r\n                values[inner]=values[inner+1]\r\n                values[inner+1]=temp\r\n            }\r\n            inner = inner+1\r\n            }\r\n            \r\n        }\r\n        this.setState({valueStates: states, bubbleInner: inner, bubbleOuter: outer})\r\n    }\r\n\r\n    mergeStep(){\r\n        var arrays = this.state.mergeArrays\r\n        var newArrays = []\r\n        var newValues = []\r\n        for(var i = 0; i < arrays.length;i=i+2){\r\n            var tempArray = []\r\n            for(var g = 0; g < arrays[i].length;g++){\r\n                tempArray.push(arrays[i][g])\r\n            }\r\n            if(i+1 < arrays.length){\r\n                for(g = 0; g < arrays[i+1].length;g++){\r\n                    tempArray.push(arrays[i+1][g])\r\n                }\r\n            }\r\n            \r\n            tempArray.sort(function(a, b) {return a - b;})\r\n            for(g=0; g < tempArray.length; g++){\r\n                newValues.push(tempArray[g])\r\n            }\r\n            newArrays.push(tempArray)\r\n        }\r\n        this.setState({mergeArrays: newArrays, values: newValues})\r\n        if(newArrays.length===1){\r\n            clearInterval(this.state.sortInterval)\r\n            var states = this.state.valueStates\r\n            for(i = 0; i < states.length; i++){\r\n                states[i]=3\r\n            }\r\n            this.setState({valueStates: states})\r\n        }\r\n    }\r\n\r\n    quickStep(){\r\n        var quickArrays = this.state.quickArrays\r\n        var values = this.state.values\r\n        if (quickArrays.length===values.length){\r\n            console.log(\"done\");\r\n            var states = this.state.valueStates\r\n            for(var i = 0; i < states.length; i++){\r\n                states[i] = 3\r\n            }\r\n            this.setState({valueStates: states})\r\n            clearInterval(this.state.sortInterval)\r\n        } else {\r\n            var newQuickArrays = []\r\n            var doneStep = false\r\n            var lockedIndex = 0\r\n            var completeIndexes = []\r\n            for(var i = 0; i < quickArrays.length; i++){\r\n                if(doneStep){\r\n                    newQuickArrays.push(quickArrays[i])\r\n                } else {\r\n                    if(quickArrays[i].length>1){\r\n                        doneStep = true\r\n                        var pivot = Math.floor(quickArrays[i].length/2)\r\n                        \r\n                        var split = this.splitOnPivot(quickArrays[i], pivot)\r\n                        if(split[0].length>0){\r\n                            newQuickArrays.push(split[0])  \r\n                            lockedIndex = lockedIndex + split[0].length\r\n                        }\r\n                        newQuickArrays.push([quickArrays[i][pivot]])\r\n                        if(split[1].length>0){\r\n                            newQuickArrays.push(split[1])  \r\n                        }\r\n                    } else {\r\n                        completeIndexes.push(i)\r\n                        lockedIndex = lockedIndex + quickArrays[i].length\r\n                        newQuickArrays.push(quickArrays[i])\r\n                    }\r\n                }\r\n            }\r\n            var newValues = []\r\n            for (i = 0; i < newQuickArrays.length; i++){\r\n                for (var g = 0; g < newQuickArrays[i].length; g++){\r\n                    newValues.push(newQuickArrays[i][g])\r\n                }\r\n            }\r\n            var states = this.state.valueStates\r\n            for(i = 0; i <= completeIndexes.length; i++){\r\n                states[completeIndexes[i]] = 3\r\n            }\r\n            states[lockedIndex]=3\r\n            this.setState({quickArrays: newQuickArrays, values: newValues, valueStates: states})\r\n        }\r\n    }\r\n\r\n    splitOnPivot(values, pivotIndex){\r\n        var lowerHalf=[]\r\n        var upperHalf=[]\r\n        var pivotVal=values[pivotIndex]\r\n        for (var i = 0; i < values.length; i++){\r\n            if (i!==pivotIndex){\r\n               if (values[i]<=pivotVal){\r\n                    lowerHalf.push(values[i])\r\n                } else {\r\n                upperHalf.push(values[i])\r\n                }\r\n            }\r\n            \r\n        }\r\n        return [lowerHalf, upperHalf]\r\n    }\r\n\r\n}\r\n\r\nexport default Sorter;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport Sorter from './components/sorterTempComponent';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Sorter />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}