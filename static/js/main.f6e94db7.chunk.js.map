{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","components/sorterTempComponent.jsx","index.js"],"names":["App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Sorter","state","screenHeight","screenWidth","width","height","values","valueStates","bubbleIsActive","mergeIsActive","quickIsActive","sortInterval","bubbleInner","bubbleOuter","mergeArrays","workingMergeArrays","mergeOuter","mergeInner","speed","Fragment","Navbar","bg","variant","Brand","Button","className","onClick","this","genNewArray","renderButtons","sortOnClick","renderColumns","bind","mergeSortOnClick","quickSortOnClick","bubbleSortOnClick","updateWindowDimensions","bubbleStep","mergeStep","setState","setTimeout","window","addEventListener","removeEventListener","innerHeight","columnHeight","innerWidth","clearInterval","Array","Math","floor","states","i","length","random","columns","vals","push","style","display","backgroundColor","lines","ButtonGroup","aria-label","setInterval","tempArray","inner","outer","temp","arrays","newArrays","newValues","g","sort","a","b","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f6e94db7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.2d27ead7.svg\";","import logo from './logo.svg';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <p>\r\n          Edit <code>src/App.js</code> and save to reload.\r\n        </p>\r\n        <a\r\n          className=\"App-link\"\r\n          href=\"https://reactjs.org\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Learn React\r\n        </a>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React, { Component } from 'react';\r\nimport Button from 'react-bootstrap/Button'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport { Navbar } from 'react-bootstrap';\r\nimport {ButtonGroup} from 'react-bootstrap';\r\n\r\nclass Sorter extends Component {\r\n    state = {\r\n        screenHeight: null,\r\n        screenWidth: null,\r\n        width: 5,\r\n        height: 849,\r\n        values: [],\r\n        valueStates: [],\r\n        bubbleIsActive: null,\r\n        mergeIsActive: null,\r\n        quickIsActive: null,\r\n        sortInterval: null,\r\n        bubbleInner: null,\r\n        bubbleOuter: null,\r\n        mergeArrays: [],\r\n        workingMergeArrays: [],\r\n        mergeOuter: null,\r\n        mergeInner: null,\r\n        speed: 15\r\n    };\r\n\r\n    render(){\r\n        return (\r\n            <React.Fragment>\r\n                <Navbar bg=\"dark\" variant=\"dark\">\r\n                    <Navbar.Brand>\r\n                        Sorting Visualiser (WIP)\r\n                    </Navbar.Brand>\r\n                    <Button className=\"ml-1\" variant=\"primary\" onClick={this.genNewArray}>\r\n                        Generate Array\r\n                    </Button>\r\n                    {this.renderButtons()}\r\n                    <Button className=\"ml-3\" variant=\"primary\" onClick={this.sortOnClick}>\r\n                        Sort\r\n                    </Button>\r\n                </Navbar>\r\n                {this.renderColumns()} \r\n                <Navbar bg=\"dark\" variant=\"dark\" className=\"mt-0\">\r\n\r\n                </Navbar>\r\n            </React.Fragment>\r\n            );\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.genNewArray=this.genNewArray.bind(this)\r\n        this.mergeSortOnClick=this.mergeSortOnClick.bind(this)\r\n        this.quickSortOnClick=this.quickSortOnClick.bind(this)\r\n        this.bubbleSortOnClick=this.bubbleSortOnClick.bind(this)\r\n        this.updateWindowDimensions=this.updateWindowDimensions.bind(this)\r\n        this.bubbleStep=this.bubbleStep.bind(this)\r\n        this.mergeStep=this.mergeStep.bind(this)\r\n        this.sortOnClick=this.sortOnClick.bind(this)\r\n        this.setState({mergeIsActive: false, bubbleIsActive: true, quickIsActive: false})\r\n        this.updateWindowDimensions()\r\n        setTimeout(this.genNewArray, 10)\r\n        this.genNewArray()\r\n        window.addEventListener('resize', this.updateWindowDimensions)\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        window.removeEventListener('resize', this.updateWindowDimensions)\r\n    }\r\n\r\n    updateWindowDimensions(){\r\n        var height = window.innerHeight\r\n        var columnHeight = height - 80\r\n        this.setState({screenWidth: window.innerWidth, screenHeight: height, height: columnHeight})\r\n    }\r\n\r\n    genNewArray(){\r\n        clearInterval(this.state.sortInterval)\r\n        var screenWidth = this.state.screenWidth\r\n        screenWidth = screenWidth-17\r\n        if (screenWidth <= 0){\r\n            screenWidth = 1\r\n        }\r\n        var values = new Array(Math.floor(screenWidth/this.state.width))\r\n        var states = new Array(Math.floor(screenWidth/this.state.width))\r\n        for (var i=0; i<values.length; i++){\r\n            values[i]=Math.random()*(this.state.height-5)\r\n            states[i]=1\r\n        }\r\n        this.setState({values: values, valueStates: states})\r\n    }\r\n\r\n    renderColumns(){\r\n        if (this.state.screenWidth != null){\r\n            var columns = []\r\n            var vals = this.state.values\r\n            var states = this.state.valueStates\r\n            var height = this.state.height\r\n            for (var i=0; i<(this.state.screenWidth-17)/this.state.width; i++){\r\n                columns.push(<div style={{display: \"inline-block\", width: 1, height: height}}></div>)\r\n                if (states[i]===1){\r\n                    columns.push(<div style={{display: \"inline-block\", width: (this.state.width-1), height: vals[i], backgroundColor: 'skyblue'}}></div>)\r\n                }\r\n                if (states[i]===2){\r\n                    columns.push(<div style={{display: \"inline-block\", width: (this.state.width-1), height: vals[i], backgroundColor: 'chocolate'}}></div>)\r\n                }\r\n                if (states[i]===3){\r\n                    columns.push(<div style={{display: \"inline-block\", width: (this.state.width-1), height: vals[i], backgroundColor: 'forestgreen'}}></div>)\r\n                }\r\n            }\r\n\r\n            return columns\r\n        }\r\n    }\r\n\r\n    renderButtons(){\r\n        if (this.state.bubbleIsActive != null){\r\n            var bubbleIsActive = this.state.bubbleIsActive\r\n            var mergeIsActive = this.state.mergeIsActive\r\n            var quickIsActive = this.state.quickIsActive\r\n            var lines = []\r\n            if (bubbleIsActive){\r\n                lines.push(<Button variant=\"primary\" onClick={this.bubbleSortOnClick}>BubbleSort</Button>)\r\n            } else {\r\n                lines.push(<Button variant=\"secondary\" onClick={this.bubbleSortOnClick}>BubbleSort</Button>)\r\n            }\r\n            if (mergeIsActive){\r\n                lines.push(<Button className=\"ml-1\" variant=\"primary\" onClick={this.mergeSortOnClick}>Merge Sort</Button>)\r\n            } else {\r\n                lines.push(<Button className=\"ml-1\" variant=\"secondary\" onClick={this.mergeSortOnClick}>Merge Sort</Button>)\r\n            }\r\n            if (quickIsActive){\r\n                lines.push(<Button className=\"ml-1\" variant=\"primary\" onClick={this.quickSortOnClick}>Quick Sort</Button>)\r\n            } else {\r\n                lines.push(<Button className=\"ml-1\" variant=\"secondary\" onClick={this.quickSortOnClick}>Quick Sort</Button>)\r\n            }\r\n            return (\r\n                <ButtonGroup className=\"ml-3\" aria-label=\"Sorting Options\">\r\n                    {lines}\r\n                </ButtonGroup>\r\n            )\r\n        }\r\n    }\r\n\r\n    bubbleSortOnClick(){\r\n        this.setState({mergeIsActive: false, bubbleIsActive: true, quickIsActive: false})\r\n        clearInterval(this.state.sortInterval)\r\n        var states = this.state.valueStates\r\n            for(var i = 0; i < states.length; i++){\r\n                states[i]=1\r\n            }\r\n        this.setState({valueStates: states})\r\n    }\r\n\r\n    mergeSortOnClick(){\r\n        this.setState({mergeIsActive: true, bubbleIsActive: false, quickIsActive: false})\r\n        clearInterval(this.state.sortInterval)\r\n        var states = this.state.valueStates\r\n            for(var i = 0; i < states.length; i++){\r\n                states[i]=1\r\n            }\r\n        this.setState({valueStates: states})\r\n    }\r\n\r\n    quickSortOnClick(){\r\n        this.setState({mergeIsActive: false, bubbleIsActive: false, quickIsActive: true})\r\n        clearInterval(this.state.sortInterval)\r\n        var states = this.state.valueStates\r\n            for(var i = 0; i < states.length; i++){\r\n                states[i]=1\r\n            }\r\n        this.setState({valueStates: states})\r\n    }\r\n\r\n    sortOnClick(){\r\n        clearInterval(this.state.sortInterval)\r\n        if (this.state.bubbleIsActive){\r\n            var sortInterval = setInterval(this.bubbleStep, 1)\r\n            this.setState({sortInterval: sortInterval, bubbleInner: 0, bubbleOuter: 0})\r\n        }\r\n        if (this.state.mergeIsActive){\r\n            var sortInterval = setInterval(this.mergeStep, 500)\r\n            var values = this.state.values\r\n            var mergeArrays = []\r\n            for (var i = 0; i < values.length; i++){\r\n                var tempArray = []\r\n                tempArray.push(values[i])\r\n                mergeArrays.push(tempArray)\r\n            }\r\n            this.setState({sortInterval: sortInterval, mergeArrays: mergeArrays, workingMergeArrays: mergeArrays, mergeOuter: 0, mergeInner: 0})\r\n        }\r\n        if (this.state.quickIsActive){\r\n            this.setState({sortInterval: sortInterval, bubbleInner: 0, bubbleOuter: 0})\r\n        }\r\n    }\r\n    \r\n    bubbleStep(){\r\n        var inner = this.state.bubbleInner\r\n        var outer = this.state.bubbleOuter\r\n        var speed = this.state.speed\r\n        var states = this.state.valueStates\r\n        var values = this.state.values\r\n\r\n        for (var i = 0; i < speed; i++){\r\n            if (inner>this.state.values.length - 1-outer){\r\n                states[inner-1]=3\r\n                states[inner] = 3\r\n                inner = 0\r\n                outer = outer+1\r\n            }\r\n            if (outer >this.state.values.length){\r\n                clearInterval(this.state.sortInterval)\r\n            }\r\n            \r\n            if (states[inner]===1){\r\n                states[inner]=2\r\n                states[inner+1]=2\r\n            } else {\r\n                states[inner]=1\r\n                states[inner+1]=1\r\n            if (values[inner]>values[inner+1]){\r\n                var temp = values[inner]\r\n                values[inner]=values[inner+1]\r\n                values[inner+1]=temp\r\n            }\r\n            inner = inner+1\r\n            }\r\n            \r\n        }\r\n        this.setState({valueStates: states, bubbleInner: inner, bubbleOuter: outer})\r\n    }\r\n\r\n    mergeStep(){\r\n        var arrays = this.state.mergeArrays\r\n        var newArrays = []\r\n        var newValues = []\r\n        for(var i = 0; i < arrays.length;i=i+2){\r\n            var tempArray = []\r\n            for(var g = 0; g < arrays[i].length;g++){\r\n                tempArray.push(arrays[i][g])\r\n            }\r\n            if(i+1 < arrays.length){\r\n                for(g = 0; g < arrays[i+1].length;g++){\r\n                    tempArray.push(arrays[i+1][g])\r\n                }\r\n            }\r\n            \r\n            tempArray.sort(function(a, b) {return a - b;})\r\n            for(g=0; g < tempArray.length; g++){\r\n                newValues.push(tempArray[g])\r\n            }\r\n            newArrays.push(tempArray)\r\n        }\r\n        this.setState({mergeArrays: newArrays, values: newValues})\r\n        if(newArrays.length===1){\r\n            clearInterval(this.state.sortInterval)\r\n            var states = this.state.valueStates\r\n            for(i = 0; i < states.length; i++){\r\n                states[i]=3\r\n            }\r\n            this.setState({valueStates: states})\r\n        }\r\n    }\r\n}\r\n\r\nexport default Sorter;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport Sorter from './components/sorterTempComponent';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Sorter />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}